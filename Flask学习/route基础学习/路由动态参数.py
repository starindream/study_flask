from flask import Flask

"""
路由参数匹配

注意：
1、想要获取路由路径中参数必须是以 /<参数名> 的形式。
2、从路由路径获取参数，可以放在任意位置，但是在非获取参数的位置必须要跟route中的完全一样。
    可以理解为除了 <> 外的，必须在路由中都需要进行绝对匹配
    如：/hello/1<value>2/33 ，在这个路由中，路径必须存在的值为 /hello/1{任意值}2/33 除了，大阔号的值外，其余的必须要全都匹配
    自理解：可能在获取到请求路径后，flask 将这个路径跟定义的route做对比，只需要匹配成功 <value> 前的值都存在，且 <value> 末尾的值也存在
        那么便可以理解为匹配成功，中间的值，可以转化为 value 参数传递给视图。 
3、可以在 <int:value> 指定路径 转化 成 value 必须的数据类型，如果路径匹配成功，但是中间需要转化的路径数据结构不正确，也会导致匹配不成功。 
4、不管匹配规则是什么，斜杠在路由中表示子路由的意思，不会被动态参数捕获，除非指定动态参数路由为 path ，便可以捕获 / 字符
    如：/hello/<value> 在匹配 /hello/11/23 时会出错，因为多了一级 /23 除非指定 <path:value>

作用：
1、将路由进行规则匹配，可以将匹配到的参数，作为实参传递给视图使用
"""

app = Flask(__name__)


@app.route('/hello/1<int:value>2/33')
def hello(value):
    print('value', value)
    return 'hello' + value


if __name__ == '__main__':
    app.run(port=5002, debug=True)
